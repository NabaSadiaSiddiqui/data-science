R.version.string
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
:
yes
quit
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Naba")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
sep(1:3, c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
y
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVect)
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
matrix()
info()
matrix
myMatrix2 <- matrix(1:20,4,5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
myData <- colnames(cnames)
colnames(myData) <- cnames
myData
quit()
add2 <- function(x, y) {
x + y
}
add2(8,5)
above <- function(x, n) {
use <- x>n
x[use]
}
x <- 1:20
above(x, 10)
above <- function(x, n=10) {
use <- x>n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
colummean(myData)
columnmean
columnmean(airquality)
cube <- function(x,n) {}
x^3
cube <- function(x,n) { }
cube <- function(x,n) { x^3 }
cube
cube(3)
exit
quit()
cube <- function(x,n) { x^3 }
cube
cube(3)
x <- 1:10
if(x>5) { x<-0}
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)}
f
z<-10
f(3)
x <- 5
y <- if(x<3) {
NA
}
else {
10
}
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
quit
quit()
library(datasets)
data(iris)
?iris
iris$Sepal.Length
iris$Species
iris$Sepal.Length
index <- gl(3, 50)
tapply(iris$Sepal.Length, index, mean, simplify=TRUE)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars$cyl
?tapply
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
res <- tapply(mtcars$hp, mtcars$cyl, mean)
res
res[0]
res[4]
res$4
res[1]
res[3]
res[3]-res[1]
debug(ls)
ls()
quit()
quit()
quit()
setwd("/home/nabass/Workspace/R/r-programming-data-science-specialization/PA3")
source("rankall.R")
source("rankhospital.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
df <- rankall("heart attack", 4)
class(df)
DF <- data.frame(df)
class(DF)
source("rankall.R")
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
dir()
source("best.R")
source("rankhospital.R")
source("rankall.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
